
//You are the owner of a coworking space like WeWork and your office building is rectangular. Your team just built wall //partitions to create mini offices for startups. This office campus is represented by a 2D array of 1s (floor spaces) and 0s //(walls). Each point on this array is a one foot by one foot square. You need to calculate the number of offices. A single //office is bordered by walls and is constructed by placing floors next to each other, horizontally and/or vertically. Two 1s //adjacent to each other horizontally or vertically are always part of the same office.

//Function numOffices() has one parameter: grid - a 2D grid/array of 1s and 0s

//In this problem, our input format is as follows: The first line is the number of rows in the 2D array. The second line is the //number of columns in the 2D array. The rest of the input contains the data to be processed.

class Solution(object):
    def numOffices(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        # your code here
        if List[List[i]]!= List[List[i+1]]
        numOffices++;
        return 0

def get_matrix():
    row = int(input())
    col = int(input())
    grid = [["0"]*col]*row

    for i in range(row):
        line = input()
        grid[i] = list(line)[0:col]
    return grid

        
if __name__ == "__main__":
    sol = Solution()
    matrix = get_matrix()
    offices = sol.numOffices(matrix)
    print(offices)
